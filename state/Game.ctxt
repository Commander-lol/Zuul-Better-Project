#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment10.params=command
comment10.target=boolean\ quit(command.Command)
comment10.text=\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\ whether\ we\r\n\ really\ quit\ the\ game.\r\n\ \r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment11.params=dir
comment11.target=java.util.HashSet\ getKvFiles(java.lang.String)
comment11.text=\r\n\ Recursively\ searches\ the\ given\ directory\ for\ any\ files\ ending\ with\ '.kv'\r\n\ and\ adds\ their\ paths\ to\ a\ set\r\n\ \r\n\ @param\ dir\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ directory\ path\ of\ the\ directory\ to\ search\r\n\ @return\ A\ HashSet\ object\ containing\ the\ paths\ of\ all\ the\ .kv\ files\ that\r\n\ \ \ \ \ \ \ \ \ were\ found\ in\ the\ given\ directory\r\n
comment2.params=
comment2.target=void\ play()
comment2.text=\r\n\ \ \ \ \ \ \ \ Room\ outside,\ theater,\ pub,\ lab,\ office;\r\n\r\n\ \ \ \ \ \ \ \ //\ create\ the\ rooms\r\n\ \ \ \ \ \ \ \ outside\ \=\ new\ Room("outside\ the\ main\ entrance\ of\ the\ university",\ this);\r\n\ \ \ \ \ \ \ \ theater\ \=\ new\ Room("in\ a\ lecture\ theater",\ this);\r\n\ \ \ \ \ \ \ \ pub\ \=\ new\ Room("in\ the\ campus\ pub",\ this);\r\n\ \ \ \ \ \ \ \ lab\ \=\ new\ Room("in\ a\ computing\ lab",\ this);\r\n\ \ \ \ \ \ \ \ office\ \=\ new\ Room("in\ the\ computing\ admin\ office",\ this);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ rooms.put("outside",\ outside);\r\n\ \ \ \ \ \ \ \ rooms.put("theater",\ theater);\r\n\ \ \ \ \ \ \ \ rooms.put("pub",\ pub);\r\n\ \ \ \ \ \ \ \ rooms.put("lab",\ lab);\r\n\ \ \ \ \ \ \ \ rooms.put("office",\ office);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //\ initialise\ room\ exits\r\n\ \ \ \ \ \ \ \ outside.setExit("east",\ "theater");\r\n\ \ \ \ \ \ \ \ outside.setExit("south",\ "lab");\r\n\ \ \ \ \ \ \ \ outside.setExit("west",\ "pub");\r\n\r\n\ \ \ \ \ \ \ \ theater.setExit("west",\ "outside");\r\n\r\n\ \ \ \ \ \ \ \ pub.setExit("east",\ "outside");\r\n\r\n\ \ \ \ \ \ \ \ lab.setExit("north",\ "outside");\r\n\ \ \ \ \ \ \ \ lab.setExit("east",\ "office");\r\n\r\n\ \ \ \ \ \ \ \ office.setExit("west",\ "lab");\r\n\r\n\ \ \ \ \ \ \ \ currentRoom\ \=\ "outside";\ //\ start\ game\ outside\r\n\r\n\ \ \ \ /**\r\n\ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=command
comment4.target=boolean\ processCommand(command.Command)
comment4.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment5.params=
comment5.target=void\ printHelp()
comment5.text=\r\n\ Print\ out\ some\ help\ information.\ Here\ we\ print\ a\ simple\r\n\ message\ and\ a\ list\ of\ the\ command\ words.\r\n
comment6.params=command
comment6.target=void\ printHelp(java.lang.String)
comment6.text=\r\n\ Print\ out\ some\ help\ for\ a\ specific\ command\r\n
comment7.params=command
comment7.target=void\ parseRoom(command.Command)
comment7.text=\r\n\ Try\ to\ move\ in\ one\ direction.\ Parses\ the\ command\ to\ look\ for\ various\ factors\r\n\ including\ existence\ of\ a\ direction,\ and\ the\ presence\ of\ an\ exit\ in\ that\ direction.\r\n\ If\ it\ is\ possible\ to\ move\ in\ that\ direction,\ it\ will\ invoke\ goRoom\ to\ do\ so\r\n
comment8.params=nextRoom
comment8.target=void\ goRoom(java.lang.String)
comment8.text=\r\n\ Store\ the\ current\ room\ in\ the\ list\ of\ previous\ rooms\ and\ set\ the\ current\ room\ to\ \r\n\ the\ given\ String\ before\ printing\ out\ the\ description\ of\ the\ new\ room\ and\ \r\n
comment9.params=command
comment9.target=boolean\ goBack(command.Command)
comment9.text=\r\n\ Sends\ the\ player\ back\ N\ rooms,\ where\ N\ is\ any\ positive\ integer\ less\ than\ the\ total\ number\ of\ \r\n\ rooms\ traversed\ so\ far.\ If\ no\ number\ is\ specified,\ it\ is\ assumed\ to\ mean\ 1\ room\r\n\ \r\n\ @return\ A\ boolean\ value\ stating\ whether\ or\ not\ the\ player\ could\ succesfully\ go\ back\ that\ many\r\n\ rooms\r\n
numComments=12
