#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment10.params=command
comment10.target=boolean\ processCommand(command.Command)
comment10.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment11.params=
comment11.target=void\ printCurrentRoom()
comment11.text=\r\n\ Print\ out\ the\ entire\ set\ of\ information\ for\ the\ current\ room,\ as\ if\ it\ had\ just\ been\ entered\r\n
comment12.params=
comment12.target=void\ printHelp()
comment12.text=\r\n\ Print\ out\ some\ help\ information.\ Here\ we\ print\ a\ simple\r\n\ message\ and\ a\ list\ of\ the\ command\ words.\r\n
comment13.params=command
comment13.target=void\ printHelp(java.lang.String)
comment13.text=\r\n\ Print\ out\ some\ help\ for\ a\ specific\ command\r\n
comment14.params=itemName
comment14.target=void\ printItem(java.lang.String)
comment14.text=\r\n\ Display\ the\ picture\ associated\ with\ the\ image,\ as\ long\ as\ it\ exists\ in\ either\ the\ current\ room\ or\ your\ inventory\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ whose\ picture\ should\ be\ printed\r\n
comment15.params=
comment15.target=void\ moveNpcs()
comment16.params=command
comment16.target=void\ takeItem(command.Command)
comment16.text=\r\n\ Picks\ an\ item\ up\ off\ of\ the\ ground\ in\ the\ current\ room,\ but\ will\ put\ it\ back\ down\ if\ it\ would\ cause\ the\ player\ to\ be\ too\ heavy\r\n\ @param\ command\ The\ command\ holding\ the\ user\ input\r\n
comment17.params=command
comment17.target=void\ dropItem(command.Command)
comment17.text=\r\n\ Drops\ an\ item\ up\ on\ to\ the\ ground\ in\ the\ current\ room,\ but\ will\ pick\ it\ back\ up\ if\ it\ would\ cause\ the\ room\ to\ be\ too\ full\r\n\ @param\ command\ The\ command\ holding\ the\ user\ input\r\n
comment18.params=command
comment18.target=void\ giveItem(command.Command)
comment19.params=command
comment19.target=boolean\ answerRiddle(command.Command)
comment2.params=
comment2.target=void\ createItems()
comment20.params=command
comment20.target=void\ combineItems(command.Command)
comment20.text=\r\n\ Combine\ items\ with\ the\ brewery\ specifically;\ will\ fail\ if\ the\ brewery\ is\ not\ present,\ but\ will\ give\ a\ reply\r\n\ indicating\ that\ the\ items\ simply\ couldn't\ be\ combined\r\n\ @param\ command\ The\ command\ that\ holds\ the\ items\ to\ be\ combined\r\n
comment21.params=command
comment21.target=void\ parseRoom(command.Command)
comment21.text=\r\n\ Try\ to\ move\ in\ one\ direction.\ Parses\ the\ command\ to\ look\ for\ various\ factors\r\n\ including\ existence\ of\ a\ direction,\ and\ the\ presence\ of\ an\ exit\ in\ that\ direction.\r\n\ If\ it\ is\ possible\ to\ move\ in\ that\ direction,\ it\ will\ invoke\ goRoom\ to\ do\ so\r\n\ @param\ command\ The\ command\ holding\ the\ user\ input\r\n
comment22.params=command
comment22.target=boolean\ attemptWin(command.Command)
comment23.params=nextRoom
comment23.target=void\ goRoom(java.lang.String)
comment23.text=\r\n\ Store\ the\ current\ room\ in\ the\ list\ of\ previous\ rooms\ and\ set\ the\ current\ room\ to\ \r\n\ the\ given\ String\ before\ printing\ out\ the\ description\ of\ the\ new\ room\ and\ \r\n\ @param\ nextRoom\ The\ room\ that\ is\ to\ be\ moved\ into.\ It\ is\ assumed\ that\ it\ has\ already\ been\ checked\ for\ validity\r\n
comment24.params=command
comment24.target=boolean\ goBack(command.Command)
comment24.text=\r\n\ Sends\ the\ player\ back\ N\ rooms,\ where\ N\ is\ any\ positive\ integer\ less\ than\ the\ total\ number\ of\ \r\n\ rooms\ traversed\ so\ far.\ If\ no\ number\ is\ specified,\ it\ is\ assumed\ to\ mean\ 1\ room\r\n\ @param\ command\ The\ command\ holding\ the\ user\ input\r\n\ @return\ A\ boolean\ value\ stating\ whether\ or\ not\ the\ player\ could\ succesfully\ go\ back\ that\ many\r\n\ rooms\r\n
comment3.params=
comment3.target=void\ createNpcs()
comment4.params=
comment4.target=void\ finaliseItems()
comment4.text=\r\n\ Put\ all\ of\ the\ items\ that\ haven't\ been\ placed\ into\ rooms\ or\ npcs\ into\ the\ player's\ inventory\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment6.params=
comment6.target=void\ play()
comment6.text=\r\n\ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n
comment7.params=item
comment7.target=void\ dropItemOnFloor(entities.Item)
comment7.text=\r\n\ A\ simple\ way\ for\ context\ based\ entities\ to\ add\ an\ item\ to\ the\ current\ room\r\n\ @param\ item\ The\ item\ that\ will\ be\ placed\ on\ the\ floor\ of\ the\ current\ room\r\n
comment8.params=itemName
comment8.target=entities.Item\ adoptItem(java.lang.String)
comment8.text=\r\n\ Removes\ an\ item\ from\ the\ orphaned\ items\ list\ and\ return\ it\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ to\ be\ adopted\r\n\ @return\ The\ first\ item\ object\ with\ the\ specified\ name\r\n
comment9.params=room
comment9.target=entities.Room\ getCurrentRoom(java.lang.String)
numComments=25
