#BlueJ class context
comment0.params=
comment0.target=CommandWords()
comment0.text=\n\ Constructor\ -\ initialise\ the\ command\ words.\n
comment1.params=input
comment1.target=int[]\ parseCaptureGroups(java.lang.String)
comment1.text=\n\ Reads\ the\ simplistic\ capture\ syntax\ that\ defines\ how\ many\ words\ should\ be\ put\ \n\ into\ a\ capture\ group\ for\ parsing\ input\n\ @oaram\ input\ The\ string\ that\ should\ be\ parsed\ and\ turned\ into\ capture\ groups\n\ @return\ An\ integer\ array\ that\ defines\ how\ many\ words\ should\ be\ in\ each\ captured\ segment\ \n\ of\ user\ input\n
comment2.params=aString
comment2.target=boolean\ isCommand(java.lang.String)
comment2.text=\n\ Check\ whether\ a\ given\ String\ is\ a\ valid\ command\ word.\n\ \n\ @return\ true\ if\ it\ is,\ false\ if\ it\ isn't.\n
comment3.params=command
comment3.target=int[]\ getCaptureGroups(java.lang.String)
comment3.text=\n\ Gets\ the\ capture\ group\ associated\ with\ the\ specified\ command\n\ @param\ command\ The\ command\ whose\ capture\ group\ is\ to\ be\ returned\n\ @return\ The\ capture\ group\ specifying\ how\ to\ parse\ input\ related\ to\ this\ command\n
comment4.params=
comment4.target=void\ showAll()
comment4.text=\n\ Print\ all\ valid\ commands\ to\ System.out.\n
comment5.params=command
comment5.target=void\ show(java.lang.String)
comment5.text=\n\ Prints\ out\ the\ extended\ help\ message\ for\ a\ given\ command,\ or\ an\ error\ if\ it\ doesn't\ exist\n
numComments=6
